package irille.pub.util.SetBeans.SetBean.Utils;/** Created by IntelliJ IDEA. User: Hellobox Date: 2018/8/20 Time: 9:34 */public class StringUtils {  // 动态规划  public static boolean isMatch(String reg, String s1) {    int countXing = 0;    for (char c : reg.toCharArray()) {      countXing++;    }    if (reg.length() - countXing > s1.length()) {      return false;    }    boolean[][] dp = new boolean[reg.length() + 1][s1.length() + 1];    dp[0][0] = true;    for (int i = 1; i <= reg.length(); i++) {      char s2_char = reg.charAt(i - 1);      dp[i][0] = dp[i - 1][0] && s2_char == '*';      for (int j = 1; j <= s1.length(); j++) {        char s1_char = s1.charAt(j - 1);        if (s2_char == '*') {          dp[i][j] = dp[i - 1][j] || dp[i][j - 1];        } else {          dp[i][j] = dp[i - 1][j - 1] && (s2_char == '?' || s1_char == s2_char);        }      }    }    return dp[reg.length()][s1.length()];  }  public static boolean isMatch2(String reg, String t) {    String str1 = reg;    String str2 = t;    int[][] dp = new int[str1.length() + 1][str2.length() + 1];    for (int i = 1; i < str1.length() + 1; i++) {      for (int j = 1; j < str2.length() + 1; j++) {        if (str1.charAt(i - 1) == str2.charAt(j - 1)) {          dp[i][j] = dp[i - 1][j - 1] + 1;        } else {          dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);        }      }    }    if (str1.replaceAll("[?*]", "").length() == dp[str1.length()][str2.length()]) {      return true;    }    return false;  }}